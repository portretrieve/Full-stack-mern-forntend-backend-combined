{"version":3,"sources":["shared/UIElements/LoadingSpinner.js","shared/UIElements/Card.js","shared/context/auth-context.js","shared/UIElements/Backdrop.js","shared/FormElements/Button.js","shared/UIElements/ErrorModal.js","shared/hooks/http-Hook.js","shared/UIElements/Modal.js","shared/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","shared/Navigation/MainHeader.js","shared/Navigation/NavLinks.js","shared/Navigation/SideDrawer.js","shared/Navigation/MainNavigation.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["LoadingSpinner","props","className","asOverlay","Card","style","children","AuthContext","createContext","isLoggedIn","token","userId","login","logout","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Button","href","size","inverse","danger","to","exact","type","disabled","ErrorModal","onCancel","onClear","header","error","show","footer","useHttpClient","useState","isLoading","setIsLoading","errorState","setErrorState","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortController","abort","clearError","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Avatar","src","image","alt","width","height","UserItem","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","loadedUsers","setLoadedUsers","MainHeader","NavLinks","auth","useContext","SideDrawer","CSSTransition","whenClicked","MainNavigation","logoutTimer","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","UpdatePlace","React","lazy","UserPlaces","NewPlace","Authenticate","App","routes","setToken","tokenExpiryDate","setTokenExpiryDate","setUserId","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.831bb545.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./LoadingSpinner.css\";\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {}\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header={props.error}\n      show={!!props.error}\n      footer={\n        <div className=\"center\">\n          <Button onClick={props.onClear}>Okay</Button>\n        </div>\n      }\n    ></Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorState, setErrorState] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortController = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortController);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortController.signal\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortController\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setErrorState(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setErrorState(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortController) =>\r\n        abortController.abort()\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, errorState, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nfunction ModalOverlay(props) {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit\r\n            ? props.onSubmit\r\n            : (event) => {\r\n                event.preventDefault();\r\n              }\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = (props) => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport \"./UserItem.css\";\r\nimport Avatar from \"../../shared/UIElements/Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../shared/UIElements/Card\";\r\n\r\nfunction UserItem(props) {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={process.env.REACT_APP_ASSET_URL + props.image}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport \"./UsersList.css\";\r\nimport UserItem from \"./UserItem\";\r\nimport Card from \"../../shared/UIElements/Card\";\r\n\r\nfunction UsersList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No Users Found</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Users List</h1>\r\n      <ul className=\"users-list\">\r\n        {props.items.map((user) => (\r\n          <UserItem\r\n            key={user.id}\r\n            id={user.id}\r\n            image={user.image}\r\n            name={user.name}\r\n            placeCount={user.places.length}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-Hook\";\r\n\r\nfunction Users() {\r\n  const [loadedUsers, setLoadedUsers] = useState([]);\r\n  const { isLoading, errorState, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\r\n        );\r\n\r\n        setLoadedUsers(responseData);\r\n      } catch (err) {}\r\n    })();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={errorState} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      <UsersList items={loadedUsers} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport \"./MainHeader.css\";\r\n\r\nfunction MainHeader(props) {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\n\r\nfunction NavLinks(props) {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">LOGIN</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nfunction SideDrawer(props) {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.whenClicked}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  // const content = props.show && (\r\n  //   <aside className=\"side-drawer\" onClick={props.whenClicked}>\r\n  //     {props.children}\r\n  //   </aside>\r\n  // );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nfunction MainNavigation(props) {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawer = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n\r\n      <SideDrawer show={drawerIsOpen} whenClicked={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nlet logoutTimer;\r\n\r\nexport function useAuth() {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpiryDate, setTokenExpiryDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setUserId(uid);\r\n    setToken(token);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpiryDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpiryDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpiryDate) {\r\n      const remainingTime = tokenExpiryDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpiryDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n}\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\nimport MainNavigation from \"./shared/Navigation/MainNavigation\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Authenticate from \"./user/pages/Authenticate\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/UIElements/LoadingSpinner\";\n\n// const Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst Authenticate = React.lazy(() => import(\"./user/pages/Authenticate\"));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Authenticate />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}